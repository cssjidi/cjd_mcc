<?php
class ModelModuleQQLogin extends Model{

    public $appkey;
    public $appcallback;
    public $apperrreport;



    public function getTokens($code) {
        $version = "2.1";
        $get_auth_code_url = "https://graph.qq.com/oauth2.0/authorize";
        $get_access_token_url = "https://graph.qq.com/oauth2.0/token";
        $get_open_id = "https://graph.qq.com/oauth2.0/me";
    }

    public function qq_login(){
        //-------生成唯一随机串防CSRF攻击
        $state = md5(uniqid(rand(), true));
        $this->qq_static_var('state',$state);
        //-------构造请求参数列表
        $keysArr = array(
            "response_type" => "code",
            "client_id" => $this->appid,
            "redirect_uri" => urlencode($this->appcallback),
            "state" => $state,
            "scope" => $this->appscope,
        );
        $login_url = $this->combineURL(self::GET_AUTH_CODE_URL, $keysArr);
        // 直接跳走
        header("Location:$login_url");
        exit();
    }

    public function qq_static_var($key, $val=null){
        static $i =0;
        if($i === 0) // 暂时用session.
            $this->session->start();
        // 只有一个参数时是读, 否则是写.
        if($val !== null){
            $this->session->data[$key] = $val;
        }
        //无论如何都会返回!
        return $this->session->data[$key];
    }

    private function combineURL($baseURL,$keysArr){
        $combined = $baseURL.'?';
        $valueArr = array();
        foreach($keysArr as $key => $val){
            if($val)
                $valueArr[] = "$key=$val";
        }
        $keyStr = implode("&",$valueArr);
        $combined .= ($keyStr);
        return $combined;
    }

}